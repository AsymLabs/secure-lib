{"name":"Secure-lib","tagline":"A rough attempt to secure a Bash script for the truely paranoid.","body":"# Introduction\r\n\r\nThe Bash library `secure-lib` can be used to help harden Bash scripts against\r\nmalicious use.  For most purposes this would not be needed but in the case a \r\nscript is used on a public network or as a cgi file then it may be justified.\r\nOf course if one is also truly paranoid it may be of interest too.  \r\n  \r\nGenerally it is considered good security practice when using binary tools to\r\nprovide the full path to the binary when invoked.  To facilitate this action,\r\n`secure-lib` provides the association `safe[]`.  For example grep may be\r\ncalled with a full path by invoking `${safe[grep]}`.  This association can be\r\nextended depending upon specific needs.  \r\n  \r\n`secure-lib` was inspired in part by the excellent *Bash Cookbook, Albing,\r\nVossen and Newham, O'reilly, 2007*.  \r\n\r\n### Motivation\r\n\r\nBash can introduce security risks within public system.   Often breaches\r\nare specific to the PATH variable and alias. Malicious software is easily \r\naccessed within a user area by modification of the PATH variable.  This library\r\nattempts to isolate some of those risks - and provide additional safeguards.  \r\n\r\n### Dependencies\r\n\r\nBash 4+ and nothing else.  For earlier versions, there are workarounds for \r\nassociations (key value maps) but we leave this as an exercise for others.   \r\n\r\n# Features\r\n\r\nFeatures include basic security for most scripts that can be tightened\r\nsignificantly, where required, and a safe association that can be used to\r\nfacilitate tighter security.  \r\n\r\n# Usage\r\n\r\nThis is not a Bash executable.  Source it at the beginning of your executable\r\nscript with:  \r\n\r\n````bash\r\nsource '/your/path/to/secure-lib'  \r\n````\r\n\r\nThat's it.  \r\n  \r\n# Examples\r\n\r\nYou can invoke the safe association as follows:  \r\n  \r\n>[user@a52j lib]$ source secure-lib  \r\n>[user@a52j lib]$  \r\n>  \r\n>[user@a52j lib]$ ${safe[grep]} 'secure' secure-lib.md  \r\n>secure-lib  \r\n>The Bash library `secure-lib` can be used to help harden Bash scripts against  \r\n>`secure-lib` provides the association `safe[]`.  For example grep may be  \r\n>`secure-lib` was inspired in part by the excellent *Bash Cookbook, Albing,  \r\n>[user@a52j lib]$  \r\n\r\n# Terms\r\n\r\nWe offer this to the community for free and you may use it as you wish.  \r\n  \r\nThis source is Copyright (C) Applied Numerics Ltd 2013 Great Britain under the\r\nbrand name AsymLabs (TM) and is provided to the community under the MIT license.\r\nAlthough we have not yet encountered any issues, there is no warranty of any\r\ntype given so you must use it at your own risk.  \r\n\r\n# Closure\r\n\r\nWe hope that you find this Bash library to be of value.  Should you have any\r\ncomments or suggestions for improvement please let us know at\r\ndv@angb.co.  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}